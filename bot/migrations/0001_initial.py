# Generated by Django 5.1 on 2024-08-25 15:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Matn')),
            ],
            options={
                'verbose_name': "ðŸ“ž  Biz bilan bog'laning",
                'verbose_name_plural': "ðŸ“ž  Biz bilan bog'laning",
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Yangi'), ('approved_by_account', 'Hisobchi tomonidan tasdiqlangan'), ('approved_by_director', 'Direktor tomonidan tasdiqlangan'), ('approved_by_storekeeper', 'Omborchi tomonidan tasdiqlangan')], default='pending', max_length=24, verbose_name='Buyurtma holati')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Buyurtma berilgan vaqt')),
                ('accountant_approve_time', models.DateTimeField(blank=True, null=True, verbose_name='Hisobchi tasdiqlagan vaqt')),
                ('director_approve_time', models.DateTimeField(blank=True, null=True, verbose_name='Direktor tasdiqlagan vaqt')),
                ('storekeeper_approve_time', models.DateTimeField(blank=True, null=True, verbose_name='Omborchi tasdiqlagan vaqt')),
            ],
            options={
                'verbose_name': 'Buyurtma',
                'verbose_name_plural': 'Buyurtmalar',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(upload_to='products', verbose_name='Mahsulot rasmi')),
                ('title', models.CharField(max_length=255, verbose_name='Mahsulot nomi')),
                ('description', models.TextField(verbose_name='Izoh')),
                ('is_active', models.BooleanField(default=True, verbose_name='Faolmi ?')),
                ('price', models.IntegerField(default=0, verbose_name='Narxi')),
            ],
            options={
                'verbose_name': 'Mahsulot',
                'verbose_name_plural': 'Mahsulotlar',
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.IntegerField(unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_agent', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('is_updated', models.BooleanField(default=False, editable=False)),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('director', 'Direktor'), ('accountant', 'Hisobchi'), ('storekeeper', 'Omborchi')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, verbose_name='Mahsulot nomi')),
                ('qty', models.IntegerField(default=0, verbose_name='Soni')),
                ('price', models.IntegerField(default=0, verbose_name='Narxi')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='bot.order', verbose_name='Buyurtma')),
            ],
            options={
                'verbose_name': 'Buyurtma mahsuloti',
                'verbose_name_plural': 'Buyurtma mahsulotlari',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.telegramuser', verbose_name='Mijoz'),
        ),
    ]
